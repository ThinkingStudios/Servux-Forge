plugins {
	id "dev.architectury.loom" version "1.5-SNAPSHOT"
	id "maven-publish"
	id "com.hypherionmc.modutils.modpublisher" version "2.+"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

group = project.maven_group
archivesBaseName = project.archives_base_name
version = "${project.mod_version}-mc${project.minecraft_version}"

repositories {
	maven { url "https://www.jitpack.io" }
	maven { url "https://maven.neoforged.net/releases/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	neoForge "net.neoforged:neoforge:${project.neoforge_version}"

	modApi(include("com.github.ThinkingStudios:ForgedNetworkingAPI:0.1.0-mc1.20.4"))

	implementation "com.google.code.findbugs:jsr305:3.0.2"
}

processResources {
	// Exclude the GIMP image files
	exclude '**/*.xcf'
	exclude '**/xcf'

	inputs.property "version", project.version

	filesMatching("META-INF/mods.toml") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : project.mod_id,
				"Specification-Vendor"    : project.mod_author,
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : version,
				"Implementation-Vendor"   : project.mod_author,
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

publisher {
	apiKeys {
		modrinth System.getenv("MODRINTH_TOKEN")
		curseforge System.getenv("CURSEFORGE_TOKEN")
	}

	setCurseID("${project.curseforge_id}")
	setModrinthID("${project.modrinth_id}")
	setVersionType("alpha")
	setChangelog(file("CHANGELOG.md").getText("UTF-8"))
	setVersion("${project.version}")
	setDisplayName("${project.version}")
	setGameVersions("1.20.3", "1.20.4")
	setLoaders("neoforge")
	setCurseEnvironment("client")
	setArtifact(remapJar)
	addAdditionalFile(sourcesJar)
}
